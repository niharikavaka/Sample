name: cafe_metrics

on: workflow_dispatch

jobs:
  Setup_Environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.16'

      # ✅ Cache Python Virtual Environment
      - name: Cache Python Virtual Environment
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-python-3.10.16

      # ✅ Save Cache (First Run)
      - name: Save Cache (First Run)
        if: steps.cache-venv.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-python-3.10.16     

      # ✅ Install Dependencies
      - name: Install Dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        shell: bash
        run: |
          pwd
          ls -la
          sudo apt-get update
          sudo apt-get install -y zip tar
          
          # Create virtual environment
          python -m venv .venv
          source .venv/bin/activate
          
          # Install dependencies
          pip install --upgrade pip
          pip install requests testrail google-api-python-client

      # ✅ Archive the venv directory into a .tar.gz file
      - name: Archive venv
        run: |
          tar -czf python-venv.tar.gz .venv

      # ✅ Upload the archive as an artifact
      - name: Upload Virtual Environment Archive
        uses: actions/upload-artifact@v4
        with:
          name: python-venv-tar
          path: python-venv.tar.gz
          if-no-files-found: error
  Clone_Repository:
    needs: Setup_Environment
    runs-on: ubuntu-latest
    steps:
    
      # ✅ Download the archived venv
      - name: Download Virtual Environment Archive
        uses: actions/download-artifact@v4
        with:
          name: python-venv-tar
          path: .

      # ✅ Extract the venv
      - name: Extract venv
        run: |
          tar -xzf python-venv.tar.gz
          ls -la .venv

      # ✅ Use the venv in the subsequent steps
      - name: Use Virtual Environment
        run: |
          source .venv/bin/activate
          python --version
