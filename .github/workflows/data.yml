name: Cache + Upload and Download Python Virtual Environment123

on: workflow_dispatch

jobs:

  Setup_Environment:
    runs-on: ubuntu-latest
    outputs:
      workspace_dir: ${{ github.workspace }}  # Share workspace path

    steps:
      # ✅ Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.16'

      # ✅ Cache Python Virtual Environment
      - name: Cache Python Virtual Environment
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-python-3.10.16

      # ✅ Install Dependencies only if cache missed
      - name: Install Dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y zip
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install requests testrail google-api-python-client

      # ✅ No need to upload artifacts, workspace will be reused

  # ✅ Use the same workspace without downloading artifacts
  Use_Cached_Env:
    runs-on: ubuntu-latest
    needs: Setup_Environment

    steps:
      # ✅ Use the same workspace (no artifacts required)
      - name: Reuse Cached Workspace
        run: |
          echo "Using shared workspace: ${{ github.workspace }}"

      # ✅ Set up Python again
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.16'

      # ✅ Activate the cached virtual environment
      - name: Use Cached Virtual Environment
        shell: bash
        run: |
          source .venv/bin/activate
          python --version
          pip list
